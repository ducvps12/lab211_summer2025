
package matrixcalculator;

import java.util.Scanner;

public class MatrixInput {
    private final Scanner scanner;

    public MatrixInput(Scanner scanner) {
        this.scanner = scanner;
    }

    public int getChoice() {
        while (true) {
            try {
                int choice = Integer.parseInt(scanner.nextLine().trim());
                if (choice >= 1 && choice <= 4) return choice;
                System.out.print("Choose 1-4: ");
            } catch (NumberFormatException e) {
                System.out.print("Invalid number. Try again: ");
            }
        }
    }

    public int[][] readMatrix(String name) {
        System.out.print("Enter Row " + name + ": ");
        int row = getPositiveInt();
        System.out.print("Enter Column " + name + ": ");
        int col = getPositiveInt();
        return readMatrix(name, row, col);
    }

    public int[][] readMatrix(String name, int fixedRowOrCol) {
        System.out.print("Enter Row " + name + ": ");
        int row = fixedRowOrCol;
        System.out.print("Enter Column " + name + ": ");
        int col = getPositiveInt();
        return readMatrix(name, row, col);
    }

    private int[][] readMatrix(String name, int row, int col) {
        int[][] matrix = new int[row][col];
        System.out.println("Enter " + name + " values:");
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                while (true) {
                    System.out.print("Enter Matrix[" + i + "][" + j + "]: ");
                    try {
                        matrix[i][j] = Integer.parseInt(scanner.nextLine().trim());
                        break;
                    } catch (NumberFormatException e) {
                        System.out.println("Value of matrix must be digit.");
                    }
                }
            }
        }
        return matrix;
    }

    private int getPositiveInt() {
        while (true) {
            try {
                int n = Integer.parseInt(scanner.nextLine().trim());
                if (n > 0) return n;
                System.out.print("Enter positive number: ");
            } catch (NumberFormatException e) {
                System.out.print("Invalid. Enter again: ");
            }
        }
    }
}
