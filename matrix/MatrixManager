package matrixcalculator;

/**
 * This class handles matrix input, output, and display logic.
 */
public class MatrixManager {
    InputHandler input = new InputHandler();

    // Show main menu
    public void displayMenu() {
        System.out.println("========= Matrix Calculator =========");
        System.out.println("1. Addition Matrix");
        System.out.println("2. Subtraction Matrix");
        System.out.println("3. Multiplication Matrix");
        System.out.println("4. Exit");
    }

    // Get matrix from user input
    public int[][] getMatrix(String label) {
        int rows = input.getInt("Enter rows for " + label + ": ", 1, Integer.MAX_VALUE);
        int cols = input.getInt("Enter columns for " + label + ": ", 1, Integer.MAX_VALUE);
        int[][] matrix = new int[rows][cols];

        // Loop through each row
        for (int i = 0; i < rows; i++) {
            // Loop through each column
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = input.getElement(String.format("Enter %s[%d][%d]: ", label, i + 1, j + 1));
            }
        }

        return matrix;
    }

    // Validate size and get second matrix
    public int[][] getMatrix2(int[][] matrix1, int operation) {
        int rows1 = matrix1.length;
        int cols1 = matrix1[0].length;
        int rows2, cols2;

        if (operation == 3) {
            // Loop until rows2 == cols1 for multiplication
            while (true) {
                rows2 = input.getInt("Enter rows for Matrix 2: ", 1, Integer.MAX_VALUE);
                // Condition: rows2 must equal cols1
                if (rows2 != cols1) {
                    System.out.println("Rows of Matrix 2 must match columns of Matrix 1.");
                } else break;
            }
            cols2 = input.getInt("Enter columns for Matrix 2: ", 1, Integer.MAX_VALUE);
        } else {
            // Loop until same rows for add/subtract
            while (true) {
                rows2 = input.getInt("Enter rows for Matrix 2: ", 1, Integer.MAX_VALUE);
                // Condition: rows2 must equal rows1
                if (rows2 != rows1) {
                    System.out.println("Matrix 2 must have same rows as Matrix 1.");
                } else break;
            }

            // Loop until same columns for add/subtract
            while (true) {
                cols2 = input.getInt("Enter columns for Matrix 2: ", 1, Integer.MAX_VALUE);
                // Condition: cols2 must equal cols1
                if (cols2 != cols1) {
                    System.out.println("Matrix 2 must have same columns as Matrix 1.");
                } else break;
            }
        }

        int[][] matrix = new int[rows2][cols2];
        // Loop through each row
        for (int i = 0; i < rows2; i++) {
            // Loop through each column
            for (int j = 0; j < cols2; j++) {
                matrix[i][j] = input.getElement(String.format("Enter Matrix2[%d][%d]: ", i + 1, j + 1));
            }
        }

        return matrix;
    }

    // Display single matrix
    public void displayMatrix(int[][] matrix) {
        // Loop through each row
        for (int[] row : matrix) {
            // Loop through each value in row
            for (int val : row) {
                System.out.printf("[%d]", val);
            }
            System.out.println();
        }
    }

    // Display result of calculation
    public void displayResult(int[][] m1, int[][] m2, int[][] res, int operation) {
        System.out.println("--------- Result ---------");
        displayMatrix(m1);

        // Condition: check operation type
        switch (operation) {
            case 1 -> System.out.println("+");
            case 2 -> System.out.println("-");
            case 3 -> System.out.println("*");
        }

        displayMatrix(m2);
        System.out.println("=");
        displayMatrix(res);
    }

    // Display operation title
    public void displayOperationTitle(int choice) {
        // Condition: show title based on choice
        switch (choice) {
            case 1 -> System.out.println("------ Addition Matrix ------");
            case 2 -> System.out.println("------ Subtraction Matrix ------");
            case 3 -> System.out.println("------ Multiplication Matrix ------");
        }
    }
}
