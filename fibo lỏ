package fibonacci;

public class FiboPrinter {

    public static void main(String[] args) {
        // Step 1: Declare variables
        int n = 45;
        int a = 0;
        int b = 1;

        // Step 2: Show program title
        printTitle();

        // Step 3: Print Fibonacci numbers inline (recursively)
        printInline(n, a, b);

        // Step 4: Print Fibonacci numbers with index (recursively)
        printWithIndex(n, a, b, 1);
    }

    /**
     * Show the title of the program
     */
    public static void printTitle() {
        System.out.println("The 45 Fibonacci numbers are:");
    }

    /**
     * Recursively print Fibonacci numbers in one line
     * @param count how many numbers to print
     * @param a current number
     * @param b next number
     */
    public static void printInline(int count, int a, int b) {
        // stop if no numbers left
        if (count == 0) {
            System.out.println(); // move to new line
            return;
        }

        // Print current number
        System.out.print(a);

        //  if not last number, print comma
        if (count > 1) {
            System.out.print(", ");
        }

        // Recursive call with next pair of numbers
        printInline(count - 1, b, a + b);
    }

    /**
     * Recursively print Fibonacci numbers with index
     * @param count how many numbers to print
     * @param a current number
     * @param b next number
     * @param idx current index
     */
    public static void printWithIndex(int count, int a, int b, int idx) {
        // if no numbers left, show total printed
        if (count == 0) {
            System.out.println("Total numbers printed: " + (idx - 1));
            return;
        }

        // if it's the first time, show section title
        if (idx == 1) {
            System.out.println("\nDetailed Fibonacci List:");
        }

        // Print index and number
        System.out.println(idx + ": " + a);

        // Recursive call with next number and index + 1
        printWithIndex(count - 1, b, a + b, idx + 1);
    }
}
