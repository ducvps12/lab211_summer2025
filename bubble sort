package com.mycompany.demobubblesort;

import java.util.Scanner;
import java.util.Arrays;
import java.util.Random;

public class BubbleSortDemo {
    private static final Scanner in = new Scanner(System.in);
    private static final Random random = new Random();

    public static void main(String[] args) {
        // Step 1: Set test mode flag
        boolean testMode = false;

        // Step 2: Get array input
        int[] arr = DoGetInputArray(testMode);

        // Step 3: Print the unsorted array
        DoPrintArray("Unsorted array: ", arr);

        // Step 4: Sort the array using Bubble Sort
        DoBubbleSort(arr, testMode);

        // Step 5: Print the sorted array
        DoPrintArray("Sorted array: ", arr);
    }

    private static int[] DoGetInputArray(boolean testMode) {
        // Condition: if testMode is true, return fixed test array
        if (testMode) {
            return new int[]{5, 1, 12, -5, 16};
        } else {
            int size = DoInputArraySize();
            return DoGenerateRandomArray(size);
        }
    }

    private static int DoInputArraySize() {
        int size;
        while (true) { // Loop: repeat until valid input
// Loop: repeat until valid positive integer is entered
            System.out.print("Enter number of array: ");
            try {
                size = Integer.parseInt(in.nextLine().trim());
                if (size > 0) { 
// Condition: size must be greater than 0
                    return size;
                }
                System.out.println("Size must be positive.");
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter an integer.");
            }
        }
    }

    private static int[] DoGenerateRandomArray(int size) {
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) { 
// Loop: assign random value to each element
            // Loop: assign random integer from 0 to 9 to each element

            arr[i] = random.nextInt(10);
        }
        return arr;
    }

    private static void DoPrintArray(String title, int[] arr) {
        System.out.println(title + Arrays.toString(arr));
    }

    private static void DoBubbleSort(int[] arr, boolean debug) {
            // Loop: controls number of passes through the array
        for (int i = 0; i < arr.length - 1; i++) { // Outer loop: number of passes
                // Loop: compare each adjacent pair of elements
            for (int j = 0; j < arr.length - i - 1; j++) { // Inner loop: compare adjacent values
                if (debug) {
                    DoPrintDebugStep(arr, j);
                }
// Condition: if current element > next, swap
                if (arr[j] > arr[j + 1]) { 
//swap
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
    }

    private static void DoPrintDebugStep(int[] arr, int index) {
        System.out.print(Arrays.toString(arr) + "    ");
        if (arr[index] > arr[index + 1]) {
            System.out.println(arr[index] + " > " + arr[index + 1] + ", swap");
        } else {
            System.out.println(arr[index] + " < " + arr[index + 1] + ", ok");
        }
    }
}
